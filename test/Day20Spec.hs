module Day20Spec (spec) where

import Day20 (day20a, day20b)
import Test.Hspec (Spec, describe, it, shouldBe)

sample1, sample2, sample3 :: String
sample1 = unlines
  [ "         A           "
  , "         A           "
  , "  #######.#########  "
  , "  #######.........#  "
  , "  #######.#######.#  "
  , "  #######.#######.#  "
  , "  #######.#######.#  "
  , "  #####  B    ###.#  "
  , "BC...##  C    ###.#  "
  , "  ##.##       ###.#  "
  , "  ##...DE  F  ###.#  "
  , "  #####    G  ###.#  "
  , "  #########.#####.#  "
  , "DE..#######...###.#  "
  , "  #.#########.###.#  "
  , "FG..#########.....#  "
  , "  ###########.#####  "
  , "             Z       "
  , "             Z       "
  ]
sample2 = unlines
  [ "                   A               "
  , "                   A               "
  , "  #################.#############  "
  , "  #.#...#...................#.#.#  "
  , "  #.#.#.###.###.###.#########.#.#  "
  , "  #.#.#.......#...#.....#.#.#...#  "
  , "  #.#########.###.#####.#.#.###.#  "
  , "  #.............#.#.....#.......#  "
  , "  ###.###########.###.#####.#.#.#  "
  , "  #.....#        A   C    #.#.#.#  "
  , "  #######        S   P    #####.#  "
  , "  #.#...#                 #......VT"
  , "  #.#.#.#                 #.#####  "
  , "  #...#.#               YN....#.#  "
  , "  #.###.#                 #####.#  "
  , "DI....#.#                 #.....#  "
  , "  #####.#                 #.###.#  "
  , "ZZ......#               QG....#..AS"
  , "  ###.###                 #######  "
  , "JO..#.#.#                 #.....#  "
  , "  #.#.#.#                 ###.#.#  "
  , "  #...#..DI             BU....#..LF"
  , "  #####.#                 #.#####  "
  , "YN......#               VT..#....QG"
  , "  #.###.#                 #.###.#  "
  , "  #.#...#                 #.....#  "
  , "  ###.###    J L     J    #.#.###  "
  , "  #.....#    O F     P    #.#...#  "
  , "  #.###.#####.#.#####.#####.###.#  "
  , "  #...#.#.#...#.....#.....#.#...#  "
  , "  #.#####.###.###.#.#.#########.#  "
  , "  #...#.#.....#...#.#.#.#.....#.#  "
  , "  #.###.#####.###.###.#.#.#######  "
  , "  #.#.........#...#.............#  "
  , "  #########.###.###.#############  "
  , "           B   J   C               "
  , "           U   P   P               "
  ]
sample3 = unlines
  [ "             Z L X W       C                 "
  , "             Z P Q B       K                 "
  , "  ###########.#.#.#.#######.###############  "
  , "  #...#.......#.#.......#.#.......#.#.#...#  "
  , "  ###.#.#.#.#.#.#.#.###.#.#.#######.#.#.###  "
  , "  #.#...#.#.#...#.#.#...#...#...#.#.......#  "
  , "  #.###.#######.###.###.#.###.###.#.#######  "
  , "  #...#.......#.#...#...#.............#...#  "
  , "  #.#########.#######.#.#######.#######.###  "
  , "  #...#.#    F       R I       Z    #.#.#.#  "
  , "  #.###.#    D       E C       H    #.#.#.#  "
  , "  #.#...#                           #...#.#  "
  , "  #.###.#                           #.###.#  "
  , "  #.#....OA                       WB..#.#..ZH"
  , "  #.###.#                           #.#.#.#  "
  , "CJ......#                           #.....#  "
  , "  #######                           #######  "
  , "  #.#....CK                         #......IC"
  , "  #.###.#                           #.###.#  "
  , "  #.....#                           #...#.#  "
  , "  ###.###                           #.#.#.#  "
  , "XF....#.#                         RF..#.#.#  "
  , "  #####.#                           #######  "
  , "  #......CJ                       NM..#...#  "
  , "  ###.#.#                           #.###.#  "
  , "RE....#.#                           #......RF"
  , "  ###.###        X   X       L      #.#.#.#  "
  , "  #.....#        F   Q       P      #.#.#.#  "
  , "  ###.###########.###.#######.#########.###  "
  , "  #.....#...#.....#.......#...#.....#.#...#  "
  , "  #####.#.###.#######.#######.###.###.#.#.#  "
  , "  #.......#.......#.#.#.#.#...#...#...#.#.#  "
  , "  #####.###.#####.#.#.#.#.###.###.#.###.###  "
  , "  #.......#.....#.#...#...............#...#  "
  , "  #############.#.#.###.###################  "
  , "               A O F   N                     "
  , "               A A D   M                     "
  ]

spec :: Spec
spec = do
    describe "part 1" $
        it "examples" $ do
            day20a sample1 `shouldBe` Just 23
            day20a sample2 `shouldBe` Just 58
    describe "part 2" $
        it "examples" $ do
            day20b sample1 `shouldBe` Just 26
            day20b sample2 `shouldBe` Nothing
            day20b sample3 `shouldBe` Just 396
